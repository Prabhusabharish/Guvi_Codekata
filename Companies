Q-1 :
Given a string and a number K, change every kth character to uppercase from beginning in string.
Sample Testcase :
INPUT
string 2
OUTPUT
sTrInG

Ans :
i, k = input().split()
k = int(k)

def upper(s, k):
    if k == 0:
        return s  
    result = ""
    for i in range(len(s)):
        if (i + 1) % k == 0:
            result += s[i].upper()
        else:
            result += s[i]
    return result    
string = upper(i, k)
print(string)

Q-2:
How many possible ways are to shuffle given number of playing cards?.
Input Size : |N| <= 1000000
Sample Testcase :
INPUT
7
OUTPUT
5040

Ans :

import math
N = int(input())
given_no = math.factorial(N)

print(given_no)

Q4-
tHub
companies4
Share
Given 2 arrays print 'yes' if they are mirror images of each other,otherwise 'no'.
Input Size : N <= 1000000
Sample Testcase :
INPUT
4
1 2 3 4
4 3 2 1
OUTPUT
yes
Ans :
N = int(input())
a1 = list(map(int, input().split()))
a2 = list(map(int, input().split()))

def mirr_ima(a1, a2) :
    return a1 ==a2 [::-1]
result = mirr_ima(a1, a2)

if result :
    print("yes")
else :
    print("no")
Q 9 :
a, b, x = map(int, input().split())
def calculate_y(a, b, x):
    y = a * x + b
    return y

result = calculate_y(a, b, x)
print(result)


Ans :
a, b, x = map(int, input().split())
def calculate_y(a, b, x):
    y = a * x + b
    return y

result = calculate_y(a, b, x)
print(result)

Q11 :
Given a string S ,print the vowels first and then consonants in the same order as they have occurred in the string.
Input Size : N <= 10000
Sample Testcase :
INPUT
GuVI
OUTPUT
uIGV
Ans :
input = input().strip()
def print_vowels_and_consonants(s):
    vowels = ""
    consonants = ""

    for char in s:
        if char.lower() in "aeiou":
            vowels += char
        else:
            consonants += char

    result = vowels + consonants
    print(result)

print_vowels_and_consonants(input)


Q14 :
Q4-
tHub
companies4
Share
Given 2 arrays print 'yes' if they are mirror images of each other,otherwise 'no'.
Input Size : N <= 1000000
Sample Testcase :
INPUT
4
1 2 3 4
4 3 2 1
OUTPUT
yes
Ans :
N = int(input())
a1 = list(map(int, input().split()))
a2 = list(map(int, input().split()))

def mirr_ima(a1, a2) :
    return a1 ==a2 [::-1]
result = mirr_ima(a1, a2)

if result :
    print("yes")
else :
    print("no")

Ans :
N = int(input())
arr = [input() for _ in range(N)]

def a(str):
    vowels = "aAeEiIoOuU"
    for char in str :
        if char in vowels:
            return True
    return False

def b(arr) :
    for str in arr:
        if not a(str):
            return False
    return True

if b(arr):
    print("yes")
else:
    print("no")

Q38 :
input_string = input()
words = input_string.split()
if len(words) == 2:
    reversed_string = words[1] + " " + words[0]
    print(reversed_string)
else:
    print()

Ans :
input_string = input()
words = input_string.split()
if len(words) == 2:
    reversed_string = words[1] + " " + words[0]
    print(reversed_string)
else:
    print()
Q42 :
Given a string S of length N, find whether the given string is a palindrome using stack or linked list and print 'yes' otherwise print 'no'.
Input Size : 1 <= N <= 100000
Sample Testcases :
INPUT
GuviGeek
OUTPUT
no
Ans :
def palindrome(s):
    stack = []
    for char in s:
        stack.append(char)
    for char in s:
        if char != stack.pop():
            return 'no'
    
    return 'yes'

S = input()

print(palindrome(S))


