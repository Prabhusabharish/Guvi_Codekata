Q2 :
Ramesh is searching a solution to problem posted. The statement is as follows

Print the maximum sum produced by increasing subarray. Ramesh is very confused to see the question,Help him.

Input Description:
You are given a number ‘n’,Then next line contains n space separated numbers.

Output Description:
Maximum sum value produced by the increasing sub array of size 'n'

Sample Input :
6
2 1 4 7 3 6
Sample Output :
12
Ans :
n = int(input())
arr = list(map(int, input(). split()))


def subarr (n, arr) :
    max_sum = arr[0]
    curr_sum = arr[0]
    
    for i in range(1, n) :
        if arr[i] > arr [i-1] :
            curr_sum += arr[i]
        else :
            curr_sum = arr[i]
            
        max_sum = max(max_sum, curr_sum)
        
    return max_sum

result = subarr (n, arr)
print(result)        
Q3 :
You are given with a queue. Your task is to reverse the queue elements and print it.

Input Description:
You are given a number ‘n’,denoting size of queue, Next line contains s space separated numbers

Output Description:
Print the reversed queue.

Sample Input :
6
1 2 3 4 5 6
Sample Output :
6 5 4 3 2 1
Ans :
from collections import deque

n = int(input())
arr = list(map(int, input().split()))

rev_arr = deque()
while arr:
    rev_arr.appendleft(arr.pop())

first_element = True
while rev_arr:
    if not first_element:
        print(" ", end="")
    else:
        first_element = False
    
    print(rev_arr.pop(), end="")
